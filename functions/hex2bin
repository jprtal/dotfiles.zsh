if [ $# -eq 0 ]; then
    echo "Usage: hex2bin (0x)HEX_NUMBER"
    return 1
fi

# Hexadecimal with/without "0x" prefix or/and grouped
local HEX_NUMBER=$(echo "$*" | tr -d ' ' | cut -d'x' -f2 | tr '[:lower:]' '[:upper:]')

# bc doesn't allow lowercase
local re='^[0-9A-F]+$'
if ! [[ $HEX_NUMBER =~ $re ]]; then
   echo "Error: Not a valid hex number" >&2;
   return 2
fi

local bin_number=""

local i
for i in $(seq 0 $((${#HEX_NUMBER} - 1))); do
    if [ "${HEX_NUMBER:$i:1}" = "0" ]; then
        bin_number+="0000"
    else
        bin_number+=$(echo "obase=2; ibase=16; ${HEX_NUMBER:$i:1}" | bc | awk '{ printf "%04d", $0 }')
    fi
done

local no_leading_zeros_bin_number=$(expr $bin_number + 0)

printf "0b%s\n" "$no_leading_zeros_bin_number"
printf "%s\n" "$no_leading_zeros_bin_number"
printf "0b%s\n" "$bin_number"
printf "%s\n" "$bin_number"
printf "%s\n" "$(echo "$bin_number" | sed -r 's/(.{4})/\1 /g')"
