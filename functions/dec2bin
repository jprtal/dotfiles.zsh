if [ $# -eq 0 ]; then
    echo "Usage: dec2bin DEC_NUMBER"
    return 1
fi

local DEC_NUMBER=$1

local re='^[0-9]*$'
if ! expr "$DEC_NUMBER" : "$re" > /dev/null; then
   echo "Error: Not a valid decimal number" >&2;
   return 2
fi

local bin_number
# Large numbers are splitted at 70 characters per line
read bin_number << EOF
$(echo "obase=2; ibase=10; $DEC_NUMBER" | bc)
EOF

local length=${#bin_number}

# (N + (denom-1)) / (denom)
local factor_round_up=$(((length + 3) / 4))
local extended_length=$((4 * factor_round_up))

local zeros=$(printf %$((extended_length - length))s | tr " " "0")

local extended_bin_number=$zeros$bin_number

printf "0b%s\n" "$bin_number"
printf "%s\n" "$bin_number"
printf "%s\n" "$extended_bin_number"
printf "%s\n" "$(echo "$extended_bin_number" | sed 's/\(.\{4\}\)/\1 /g')"
