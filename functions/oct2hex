if [ $# -eq 0 ]; then
    echo "Usage: oct2hex (0o)OCT_NUMBER"
    return 1
fi

# Octal with/without "0o" prefix
local OCT_NUMBER=$(echo "$1" | cut -d'o' -f2)

local re='^[0-7]*$'
if ! expr "$OCT_NUMBER" : "$re" > /dev/null; then
    echo "Error: Not a valid octal number" >&2;
    return 2
fi

local hex_number
read hex_number << EOF
$(echo "obase=16; ibase=8; $OCT_NUMBER" | bc)
EOF

local length=${#hex_number}

# (N + (denom-1)) / (denom)
local factor_round_up=$(((length + 3) / 4))
local extended_length=$((4 * factor_round_up))

local zeros=$(printf %$((extended_length - length))s | tr " " "0")

local extended_hex_number=$zeros$hex_number

printf "0x%s\n" "$hex_number"
printf "%s\n" "$hex_number"
printf "%s\n" "$extended_hex_number"
printf "%s\n" "$(echo "$extended_hex_number" | sed 's/\(.\{4\}\)/\1 /g')"
